<div class="clearfix">
  <div class="col-lg-2"></div>
  <div class="col-lg-8">
    <div id="edit-card" class="panel panel-default" hidden style="width:700px">
      <div class="panel-heading clearfix">
        <div class="container-fluid">
          <h4 class="panel-title pull-left" style="padding-top: 7.5px;">Card "<span id="card-title"></span>" edit</h4>
          <button type="button" class="close pull-right" onclick="editCardViewClose()"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        </div>
      </div>
      <div class="panel-body">
        <form class="clearfix">
          <div class="form-group">
            <label for="title" style="width:100px">Title:</label><input type="text" name="title" class="form-control" placeholder="Title..."/>
            <label for="deadline">Deadline:</label><input id="deadline" type="datetime" name="deadline" class="form-control" placeholder="MM/DD/YYYY HH:mm:ss" />
            <label for="priority">Priority:</label>
            <select id="priority" name="priority" class="form-control">
              <% _.each(CardHelper.PRIORITIES, function(p) {%>
                <option value="<%= p %>"><%= p %></option>
              <%});%>
            </select>
            <label for="description" style="width:100px">Description:</label><textarea name="description" placeholder="Description here..." class="form-control"></textarea>
            <input type="hidden" name="id"/>
          </div>
          <input type="submit" class="btn btn-primary pull-right" value="Save"/>
        </form>
        <hr />
        <h3>Comments:</h3>
        <div id="comments-wrapper">Here gonna be comments</div>
        <% if(typeof req.session.user !== 'undefined') { %>
        <h4>Add Comment:</h4>
        <form id="add-comment">
          <div class="panel panel-default comment">

            <div class="panel-heading comment-user"><%= req.session.user.name %>:</div>
            <div class="panel-body comment-content"><textarea name="content" placeholder="You comment here..." style="border:0; resize:none; width:100%; overflow: hidden;"></textarea></div>
            <div class="panel-footer comment-data"><input class="btn btn-primary" type="submit" value="Comment" /></div>

          </div>
        </form>
        <% } %>
      </div>
    </div>
  </div>
</div>


<script type="text/javascript">
  var editCardPanel = document.querySelector("#edit-card");
  var editCardForm = editCardPanel.querySelector("form");
  var commentsWrapper = document.querySelector("#comments-wrapper");
  var addCommentForm = document.querySelector("#add-comment");

  editCardForm.onsubmit = onEditCardFormSubmit;
  addCommentForm.onsubmit = function(e) {
    var form = e.target;
    var content = form.content.value;
    var card = editCardForm.id.value;
    var spanParent = document.querySelector("#card-"+card);
    io.socket.post(
      '/comment/add',
      {card:card,content:content},
      function(res,jres){
        if(jres.statusCode === 200) {
          alert("Comment added");
          console.log(res);
          editCardViewClose();
          editCardViewInit(spanParent);
        }
      });
    return false;
  };

  function commentTemplate(comment) {
    var commentDiv = document.createElement('div');
    var commentUserDiv = document.createElement('div');
    var commentContentDiv = document.createElement('div');
    var commentDataDiv = document.createElement('div');
    commentDiv.className = "panel panel-default comment";
    commentUserDiv.className = "panel-heading comment-user";
    commentContentDiv.className = "panel-body comment-content";
    commentDataDiv.className = "panel-footer comment-data";
    commentUserDiv.innerHTML = comment.username;
    commentContentDiv.innerHTML = comment.content;
    commentDataDiv.innerHTML = "Created "+(new Date(comment.createdAt)).toLocaleString().replace(',',' at ');
    commentDiv.appendChild(commentUserDiv);
    commentDiv.appendChild(commentContentDiv);
    commentDiv.appendChild(commentDataDiv);
    return commentDiv;
  }

  function editCardViewInit(e) {
    var cardId = e.id.split('-')[1];
    commentsWrapper.innerHTML = "";
    io.socket.post(
      '/card/get/',
      {id: cardId},
      function(res,jres){
        if(jres.statusCode === 200) {
          var card = res.card;
          var comments = res.comments;
          var form = editCardPanel.querySelector("form");
          editCardPanel.querySelector("#card-title").innerHTML = card.title;
          editCardPanel.querySelector("#add-comment").content.value = "";
          form.title.value = card.title;
          form.deadline.value = "";
          if(card.deadline || card.deadline !== "") {
            var deadline = new Date(card.deadline);
            var formattedDeadline = ('0'+(deadline.getMonth()+1)).slice(-2)+
              "/"+('0'+deadline.getDate()).slice(-2)+
              "/"+deadline.getFullYear()+
              " "+('0'+deadline.getHours()).slice(-2)+":"+
              ('0'+deadline.getMinutes()).slice(-2)+":"+('0'+deadline.getSeconds()).slice(-2);
            form.deadline.value = formattedDeadline;
          }
          form.priority.value = card.priority || "none";
          form.description.value = card.description || "";
          form.id.value = card.id;
          for(var i=0, l = comments.length; i < l; i++) {
            var comment = comments[i];
            commentsWrapper.appendChild(commentTemplate(comment));
          }
        }
      });
    editCardPanel.hidden = false;
  }

  function editCardViewClose() {
    editCardPanel.hidden = true;
  }

  function onEditCardFormSubmit(e) {
    var form = e.target;
    var span = document.querySelector("#card-"+form.id.value+" span");
    var deadline = form.deadline.value === "" ? "" : (new Date(form.deadline.value)).toJSON();
    io.socket.post(
      '/card/edit/',
      {id:form.id.value, title:form.title.value,
        priority:form.priority.value,
        deadline: deadline,
        description:form.description.value},
      function(res,jres){
        if(jres.statusCode === 200) {
          span.innerHTML = res[0].title;
        }
      });
    editCardViewClose();
    editCardViewInit(span.parentNode);
    return false;
  }

</script>
